Index: src/main/java/com/meta/cj/day11/ArrayWith2D.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day11/ArrayWith2D.java b/src/main/java/com/meta/cj/day11/ArrayWith2D.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day11/ArrayWith2D.java	
@@ -0,0 +1,23 @@
+package com.meta.cj.day11;
+
+public class ArrayWith2D {
+
+    public static void main(String[] args) {
+
+
+        int[][] arr = new int[][]{
+                {1, 2, 3},
+                {5, 6, 7, 8},
+                {9, 10, 11, 12, 13}
+        };
+
+        for (int[] subArr : arr) {
+            for (int ele : subArr) {
+                System.out.println(ele + " ");
+            }
+        }
+
+
+
+    }
+}
Index: .idea/inspectionProfiles/Project_Default.xml
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/inspectionProfiles/Project_Default.xml	
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="MismatchedArrayReadWrite" enabled="false" level="WARNING" enabled_by_default="false" />
+  </profile>
+</component>
\ No newline at end of file
Index: src/main/java/com/meta/cj/day12/txn/TransactionDetails.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day12/txn/TransactionDetails.java b/src/main/java/com/meta/cj/day12/txn/TransactionDetails.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day12/txn/TransactionDetails.java	
@@ -0,0 +1,58 @@
+package com.meta.cj.day12.txn;
+
+public class TransactionDetails {
+
+    private long txnId;
+    private int fromMobile;
+    private int toMobile;
+    private double amount;
+    private String status;
+
+    public TransactionDetails(long txnId, int fromMobile, int toMobile, double amount, String status) {
+        this.txnId = txnId;
+        this.fromMobile = fromMobile;
+        this.toMobile = toMobile;
+        this.amount = amount;
+        this.status = status;
+    }
+
+    public long getTxnId() {
+        return txnId;
+    }
+
+    public void setTxnId(long txnId) {
+        this.txnId = txnId;
+    }
+
+    public int getFromMobile() {
+        return fromMobile;
+    }
+
+    public void setFromMobile(int fromMobile) {
+        this.fromMobile = fromMobile;
+    }
+
+    public int getToMobile() {
+        return toMobile;
+    }
+
+    public void setToMobile(int toMobile) {
+        this.toMobile = toMobile;
+    }
+
+    public double getAmount() {
+        return amount;
+    }
+
+    public void setAmount(double amount) {
+        this.amount = amount;
+    }
+
+    public String getStatus() {
+        return status;
+    }
+
+    public void setStatus(String status) {
+        this.status = status;
+    }
+}
Index: src/main/java/com/meta/cj/day15/StringExample.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day15/StringExample.java b/src/main/java/com/meta/cj/day15/StringExample.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day15/StringExample.java	
@@ -0,0 +1,8 @@
+package com.meta.cj.day15;
+
+public class StringExample {
+
+    public static void main(String[] args) {
+
+    }
+}
Index: src/main/java/com/meta/cj/day15/StringBuilderExample.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day15/StringBuilderExample.java b/src/main/java/com/meta/cj/day15/StringBuilderExample.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day15/StringBuilderExample.java	
@@ -0,0 +1,22 @@
+package com.meta.cj.day15;
+
+import org.w3c.dom.ls.LSOutput;
+
+public class StringBuilderExample {
+
+    public static void main(String[] args) {
+
+        String str = "madam";
+        System.out.println(isPalindrome(str));
+        StringBuilder sb = new StringBuilder("ABC12");
+        sb.append("ABC");
+        System.out.println(sb);
+        sb.reverse();
+        System.out.println(sb);
+    }
+
+    public static boolean isPalindrome(String str){
+        return new StringBuilder(str).reverse().toString().equals(str);
+    }
+
+}
Index: src/main/java/com/meta/cj/day12/GeneratePrimeNumbers.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day12/GeneratePrimeNumbers.java b/src/main/java/com/meta/cj/day12/GeneratePrimeNumbers.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day12/GeneratePrimeNumbers.java	
@@ -0,0 +1,73 @@
+package com.meta.cj.day12;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Scanner;
+
+public class GeneratePrimeNumbers {
+
+    public static void main(String[] args) {
+
+        Scanner sc = new Scanner(System.in);
+        System.out.println("Enter the option");
+        System.out.println(" 1. First N prime numbers");
+        System.out.println(" 2. Prime numbers in between lower bound and upper bound");
+        int i = sc.nextInt();
+        switch(i){
+            case 1 -> {
+                System.out.println("Enter N value ");
+                int N = sc.nextInt();
+                List<Integer> primelist = getPrimeNumber(N);
+                for(int n : primelist){
+                    System.out.println(n);
+                }
+            }
+            case 2 -> {
+                System.out.println("Enter lower bound : ");
+                int lb = sc.nextInt();
+                System.out.println("Enter upper bound : ");
+                int ub = sc.nextInt();
+                List<Integer> primenumbers = getPrimeNumbers(lb,ub);
+                for(int x : primenumbers){
+                    System.out.println(x);
+                }
+            }
+        }
+
+    }
+
+    public static List<Integer> getPrimeNumber(int N){
+
+        List<Integer> list = new ArrayList<>();
+        int i = 2;
+        while(list.size() != N){
+            if(isPrime(i)){
+                list.add(i);
+            }
+            i++;
+        }
+        return list;
+    }
+
+    public static Boolean isPrime( int i){
+        if(i < 2 || (i % 2 == 0 && i != 2) ){
+            return false;
+        }
+        for(int num =2 ; num < i ; num++){
+            if(i % num == 0){
+                return false;
+            }
+        }
+        return true;
+    }
+
+    public static List<Integer> getPrimeNumbers(int lb, int ub){
+        List<Integer> list = new ArrayList<>();
+        for(int i = lb; i< ub; i++){
+            if(isPrime(i)){
+                list.add(i);
+            }
+        }
+        return list;
+    }
+}
Index: src/main/resources/transactions.csv
===================================================================
diff --git a/src/main/resources/transactions.csv b/src/main/resources/transactions.csv
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/transactions.csv	
@@ -0,0 +1,12 @@
+txnId,fromMobile,toMobile,amount,status
+1001,9876543210,9876543211,1000,success
+1002,9876543210,9876543212,2000,success
+1003,9876543211,9876543210,3000,success
+1004,9876543211,9876543214,4000,failure
+1005,9876543212,9876543215,5000,success
+1006,9876543212,9876543216,2000,failure
+1007,9876543213,9876543217,3000,success
+1008,9876543213,9876543218,4000,success
+1009,9876543214,9876543219,5000,success
+1010,9876543214,9876543220,2000,failure
+1011,9876543215,9876543221,3000,success
\ No newline at end of file
Index: src/main/java/com/meta/cj/day14/StringMethodExample.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day14/StringMethodExample.java b/src/main/java/com/meta/cj/day14/StringMethodExample.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day14/StringMethodExample.java	
@@ -0,0 +1,39 @@
+package com.meta.cj.day14;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class StringMethodExample {
+
+    public static void main(String[] args) {
+
+        String name = "AB12BA";
+        String name1 = "AB121BA";
+        int n= 3;
+        System.out.println(isPalindrome(name));
+        System.out.println(isPalindrome(name1));
+
+        System.out.println(name.charAt(0));
+        for(int i =0; i< name.length();i++){
+            char ch = name.charAt(i);
+            System.out.print(ch);
+        }
+
+    }
+
+    private static boolean isPalindrome(String str){
+        for(int i =0, j = str.length()-1;i< j;i++,j--){
+            if(str.charAt(i) != str.charAt(j)){
+                return false;
+            }
+        }
+        return true;
+    }
+    private static List<String> subStringList(String str, int n){
+        List<String> list = new ArrayList<>();
+        for(int i =0; i<=str.length()-n; i++){
+            list.add(str.substring(i,i+n));
+        }
+        return list;
+    }
+}
Index: src/main/java/com/meta/cj/day12/SplitMethodExample.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day12/SplitMethodExample.java b/src/main/java/com/meta/cj/day12/SplitMethodExample.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day12/SplitMethodExample.java	
@@ -0,0 +1,49 @@
+package com.meta.cj.day12;
+
+import java.util.ArrayList;
+import java.util.List;
+
+class Employee{
+
+    private int empId;
+    private String name;
+    private String job;
+    private double salary;
+
+    public Employee(int empId, String name, String job, double salary) {
+        this.empId = empId;
+        this.name = name;
+        this.job = job;
+        this.salary = salary;
+    }
+
+    public void showDetails(){
+        System.out.println(empId);
+        System.out.println(name);
+        System.out.println(job);
+        System.out.println(salary);
+    }
+}
+public class SplitMethodExample {
+
+    public static void main(String[] args) {
+        String data = "1001,Krishna,Manager,50000-1002,Swamy,Developer,40000-1003,Srikar,Developer,40000";
+
+        String[] arr = data.split("-");
+        List<Employee> list = new ArrayList<>();
+        for (String ele : arr) {
+            String[] arr1 = ele.split(",");
+            int empno = Integer.parseInt(arr1[0]);
+            String name = arr1[1];
+            String job = arr1[2];
+            double salary = Double.parseDouble(arr1[3]);
+            Employee emp = new Employee(empno, name, job, salary);
+            list.add(emp);
+        }
+
+        for (Employee i : list) {
+            i.showDetails();
+            System.out.println("-".repeat(20));
+        }
+    }
+}
Index: src/main/java/com/meta/cj/day15/EnumExample.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day15/EnumExample.java b/src/main/java/com/meta/cj/day15/EnumExample.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day15/EnumExample.java	
@@ -0,0 +1,44 @@
+package com.meta.cj.day15;
+
+enum Days{
+    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY;
+}
+
+enum Gender{
+    M,F;
+}
+
+enum Planets{
+
+}
+
+enum Months {
+    JANUARY,
+    FEBRUARY,
+    MARCH,
+    APRIL,
+    MAY,
+    JUNE,
+    JULY,
+    AUGUST,
+    SEPTEMBER,
+    OCTOBER,
+    NOVEMBER,
+    DECEMBER
+}
+
+public class EnumExample {
+    public static void main(String[] args) {
+
+
+        Days day = Days.FRIDAY;
+        switch (day) {
+            case MONDAY, TUESDAY -> System.out.println("Busy days ...");
+            case WEDNESDAY, THURSDAY -> System.out.println("Normal days");
+            case FRIDAY -> System.out.println("Weekend");
+            case SATURDAY, SUNDAY -> System.out.println("Holiday");
+        }
+
+        
+    }
+}
Index: src/main/java/com/meta/cj/day12/ListMethods.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day12/ListMethods.java b/src/main/java/com/meta/cj/day12/ListMethods.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day12/ListMethods.java	
@@ -0,0 +1,34 @@
+package com.meta.cj.day12;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class ListMethods {
+
+    public static void main(String[] args) {
+
+        String names1 = "Krish,Manoj,Charan,Tanvi,Aadhya";
+        String names2 = "Balu,Manoj,Kiran,Charan,Aptha";
+
+        String[] arr1 = names1.split(",");
+        String[] arr2 = names2.split(",");
+
+        String[] arr3 = new String[arr1.length + arr2.length];
+        System.arraycopy(arr1,0,arr3,0,arr1.length);
+        System.arraycopy(arr2,0,arr3,arr1.length,arr2.length);
+
+        List<String> list = getUniqueNames(arr3);
+        System.out.println(list);
+    }
+
+    private static List<String> getUniqueNames(String[] arr){
+
+        List<String> list = new ArrayList<>();
+        for(String i : arr){
+            if(!list.contains(i)){
+                list.add(i);
+            }
+        }
+        return list;
+    }
+}
Index: src/main/java/com/meta/cj/day11/PatternExample.java
===================================================================
diff --git a/src/main/java/com/meta/cj/day11/PatternExample.java b/src/main/java/com/meta/cj/day11/PatternExample.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/meta/cj/day11/PatternExample.java	
@@ -0,0 +1,27 @@
+package com.meta.cj.day11;
+
+public class PatternExample {
+
+    public static void main(String[] args) {
+
+        int[][] arr = new int[][]{
+                {1,1,1,1,1},
+                {1,0,0,0,1},
+                {1,0,0,0,1},
+                {1,1,1,1,1},
+                {1,0,0,0,1},
+                {1,0,0,0,1}
+        };
+
+        for(int[] subArr : arr){
+            for(int ele : subArr){
+                if(ele == 1){
+                    System.out.print("* ");
+                }else{
+                    System.out.print("  ");
+                }
+            }
+            System.out.println();
+        }
+    }
+}
